#!/usr/bin/env perl
use v5.18;
use Imager;
use Imager::Color;
use Imager::Fill;

my ($input, $output) = @ARGV;
($output && -f $input) or die;

my $mosaic_size = 120;
my $mosaic_area = $mosaic_size*$mosaic_size;

my $img = Imager->new(file=>$input) or die Imager->errstr;
my $img_new = $img->copy;

for my $y (map {$_*$mosaic_size} 0..int($img->getheight/$mosaic_size)) {
    for my $x (map {$_*$mosaic_size} 0..int($img->getwidth/$mosaic_size)) {
        my $patch = $img->crop(left => $x, top => $y, width => $mosaic_size, height => $mosaic_size) or next;
        
        my @sum = (0,0,0);
        for (0..$mosaic_size-1) {
            my @px = $patch->getscanline(y=>$_);
            for my $px (@px) {
                my @c = $px->rgba;
                $sum[0] += $c[0];
                $sum[1] += $c[1];
                $sum[2] += $c[2];
            }
        }
        my @mean = (int $sum[0]/$mosaic_area, int $sum[1]/$mosaic_area, int $sum[2]/$mosaic_area);
        $img_new->box(
            color => \@mean,
            filled => 1,
            xmin => $x, xmax => ($x+$mosaic_size-1),
            ymin => $y, ymax => ($y+$mosaic_size-1),
        );
    }
}

$img_new->write(file => $output) or die $img_new->errstr;
